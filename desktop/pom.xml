<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>ee.joonasvali.spaceblaster</groupId>
    <artifactId>spaceblaster</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>spaceblaster-desktop</artifactId>
  <packaging>jar</packaging>
  <name>SpaceBlaster Desktop</name>

  <properties>
    <mainClass>ee.joonasvali.spaceblaster.java.SpaceBlasterDesktop</mainClass>
    <name>SpaceBlaster</name>
    <name.uppercase>SPACEBLASTER</name.uppercase>
    <boot.class>ee.joonasvali.spaceblaster.java.SpaceBlasterDesktop</boot.class>
    <author>Joonas Vali</author>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <binfolder>${basedir}/bin</binfolder>
    <program.target>${basedir}/target</program.target>
    <gdx.native.lib>${program.target}/natives</gdx.native.lib>
    <project.dist>${program.target}/dist</project.dist>
    <dist.jdk/>
  </properties>

  <profiles>
    <profile>
      <id>win</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <os.version.string>Windows</os.version.string>
        <asm.file>${basedir}/assembly/assembly-win.xml</asm.file>
      </properties>
    </profile>
    <profile>
      <id>unix</id>
      <properties>
        <os.version.string>Mac and Linux</os.version.string>
        <asm.file>${basedir}/assembly/assembly-unix.xml</asm.file>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>ee.joonasvali.spaceblaster</groupId>
      <artifactId>spaceblaster-core</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx</artifactId>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-backend-lwjgl</artifactId>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-tools</artifactId>
      <version>${gdx.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-freetype</artifactId>
      <version>${gdx.version}</version>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-platform</artifactId>
      <classifier>natives-desktop</classifier>
    </dependency>

    <dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-freetype-platform</artifactId>
      <version>${gdx.version}</version>
      <classifier>natives-desktop</classifier>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>../assets</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <!-- https://github.com/moditect/moditect -->
        <!-- this plugin is responsible for generating module-infos inside dependencies, so we could jlink it -->
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <version>1.0.0.Beta1</version>
        <executions>
          <execution>
            <id>create-runtime-image</id>
            <phase>package</phase>
            <goals>
              <goal>create-runtime-image</goal>
            </goals>
            <configuration>
              <modules>
                <module>java.base</module>
                <module>java.desktop</module>
                <module>java.naming</module>
                <module>jdk.unsupported</module>
              </modules>
              <!-- You can use toolchain to build JVM image for different OS, just specify -Ddist.jdk=... in maven commands. -->
              <!-- If this is not provided, default, current JVM is being distributed with the game. -->
              <!-- https://maven.apache.org/guides/mini/guide-using-toolchains.html -->
              <baseJdk>${dist.jdk}</baseJdk>
              <outputDirectory>
                ${project.dist}/jre
              </outputDirectory>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <configuration>
          <descriptors>
            <descriptor>${asm.file}</descriptor>
          </descriptors>

          <finalName>${project.artifactId}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>

        <executions>
          <execution>
            <id>make-assembly</id>
            <!-- this is used for inheritance merges -->
            <phase>package</phase>
            <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Configuration for compiling files. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>12</source>
          <target>12</target>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>RELEASE</version> <!-- Use newer version of ASM for java 10 support-->
          </dependency>
        </dependencies>
      </plugin>

      <!-- Adds native files to the application, like Slick2D native files-->
      <plugin>
        <groupId>com.googlecode.mavennatives</groupId>
        <artifactId>maven-nativedependencies-plugin</artifactId>
        <version>0.0.5</version>
        <executions>
          <execution>
            <id>unpacknatives</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Produces app JAR from the classes. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${boot.class}</mainClass>
            </manifest>
            <manifestEntries>
              <Class-Path>${project.artifactId}.jar</Class-Path>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- Copy everything from target/${project.name}/${project.name} to $[project.dist} for easier access. -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.dist}</outputDirectory>
              <resources>
                <resource>
                  <directory>${program.target}/${project.artifactId}/${project.artifactId}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
